/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */


    void preorder(TreeNode* root,int level,unordered_map<int,vector<int>> &map){
         
         if (root==NULL){
             return;
         }
         
         map[level].push_back(root->val);
         
         preorder(root->left,level+1,map);
         preorder(root->right,level+1,map);
     }


    vector<vector<int>>  binarytree(TreeNode* root){
          
          unordered_map<int,vector<int>> map;
        
          vector<vector<int>> v;
          
          
          preorder(root,1,map);
          
          
          
          for(int i=1;map[i].size()>0;i++){
                v.push_back(map[i]);
             
          }
        return v;
      }




class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> o;
        o=binarytree(root);
        return o;
    }
};

