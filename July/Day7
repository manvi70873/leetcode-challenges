class Solution {
    
    int dp[1001][1001];
    bool solve (string s1, string s2, string s3,int n,int m,int len){
        if(len==0)return true;
        if(dp[n][m]!=-1) return dp[n][m];
        
        int a=0;
        int b=0;
        if((n-1)>=0 && s1[n-1]==s3[len-1]) a=solve(s1,s2,s3,n-1,m,len-1);
        if((m-1)>=0 && s2[m-1]==s3[len-1]) b=solve(s1,s2,s3,n,m-1,len-1);
        return dp[n][m]=a || b;
    }
public:
    bool isInterleave(string s1, string s2, string s3) {
        
        // int dp[101][101];
        int n=s1.length();
        int m=s2.length();
        int len=s3.length();
        if(len!=(n+m)) return false;
        dp[n][m];
        memset(dp,-1,sizeof(dp));
        return solve(s1,s2,s3,n,m,len);
    }
};
